name: Publish version

on:
  workflow_dispatch:
    inputs:
      documentShortName:
        description: "Document short name (name of the folder inside `docs`)"
        required: true
      nextLifecyclePhase:
        description: "Publish with status (http://docs.crow.nl/respec-design/stichting-crow/#specstatus-formal)"
        required: true
        default: "DEF"
        type: choice
        options:
          - "00-DOC-Document"
          - "00-IR-In review"
          - "30-CR-Committee review"
          - "40-PR-Public review"
          - "50-OR-Open review"
          - "60-DEF-Approved"
          - "95-REPL-Superceded"
          - "95-RESC-Rescinded"
          - "90-RQR-Requires review"
      reviewDateEnd:
        description: "Review comments accepted through date (provide: '2022-06-21')"
        required: false
      hypothesisComments:
        description: "Allow review comments through Hypothes.is"
        required: false
        type: boolean
      emailComments:
        description: "Allow review comments through e-mail (provide: e-mail address)."
        required: false
      prevVersion:
        description: "Link to previous lifecycle (non-draft) (provide: URL link)"
        required: false

env:
  DOCS_HOME: "https://docs.crow.nl"

permissions:
  contents: write

jobs:
  build:
    name: Build spec as archive
    runs-on: ubuntu-latest

    outputs:
      docfilename: ${{ steps.output1.outputs.docfilename }}
      destination: ${{ steps.output1.outputs.destination }}

    steps:
      - name: Get code 🛂
        uses: actions/checkout@v2

      - name: Save today's date 📅
        run: |
          echo "TODAY=$(date +%Y%m%d)" >> $GITHUB_ENV
          echo "TODAY_DASHED=$(date +%Y-%m-%d)" >> $GITHUB_ENV
          echo "SPEC_STATUS=$(echo '${{ github.event.inputs.nextLifecyclePhase }}' | cut -d'-' -f2)" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo '${{ github.repository }}' | cut -d'/' -f2 )" >> $GITHUB_ENV

      - name: Calculate document title 🧾
        run: |
          echo "DOCUMENT_FULL_NAME=${{ github.event.inputs.documentShortName }}@$SPEC_STATUS-$TODAY" >> $GITHUB_ENV

      - name: Calculate destination 🏖
        run: |
          echo "DESTINATION=docs/v/$DOCUMENT_FULL_NAME" >> $GITHUB_ENV
          echo "LIVE_URL=$DOCS_HOME/$REPO_NAME/v/$DOCUMENT_FULL_NAME" >> $GITHUB_ENV

      - name: Set outputs
        id: output1
        run: |
          echo "::set-output name=docfilename::$(echo $DOCUMENT_FULL_NAME)"
          echo "::set-output name=destination::$(echo $DESTINATION)"

      - name: Generate archive 📦
        uses: w3c/spec-prod@v2
        # This version only pushes on event: push. Therefore upload-respec-artifact
        with:
          SOURCE: docs/${{ github.event.inputs.documentShortName }}/index.html
          DESTINATION: ${{ env.DESTINATION }}/index.html
          TOOLCHAIN: respec
          GH_PAGES_BRANCH: gh-pages
          BUILD_FAIL_ON: nothing
          VALIDATE_WEBIDL: false
          VALIDATE_LINKS: false
          VALIDATE_MARKUP: false
          VALIDATE_PUBRULES: false
          GH_PAGES_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_PAGES_BUILD_OVERRIDE: |
            specStatus: ${{ env.SPEC_STATUS }}
            publishDate: ${{ env.TODAY_DASHED }}
            reviewDateEnd: ${{ github.event.inputs.reviewDateEnd }}
            hypothesisComments: ${{ github.event.inputs.hypothesisComments }}
            emailComments: ${{ github.event.inputs.emailComments }}
            prevVersion: ${{ github.envent.inputs.prevVersion }}

  deploy:
    name: Upload spec archive to gh-pages:v/
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Get code 🛂
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - run: |
          git switch gh-pages
          echo "Contains: $(ls)"

      - name: Expand, extract and deploy archive 🚀
        id: upload-respec-artifact
        uses: actions/download-artifact@v3
        with:
          name: spec-prod-result

      - run: |
          echo "Contains after download $(ls -R)"
          mkdir -p v/
          mv *.gh/docs/v/* v/

      - name: Create PDF from HTML
        uses: frnode/html-to-pdf-action@v1.0.1
        with:
          htmlFile: v/${{ needs.build.outputs.docfilename }}/index.html
          outputFile: v/${{ needs.build.outputs.docfilename }}/${{ needs.build.outputs.docfilename }}.pdf
          pdfOptions: '{"format": "A4", "scale": 0.9, "printBackground": true}'

      - name: Push new document to repo 🚀
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: gh-pages
          create_branch: true
          file_pattern: v/** # only v/, ignore the expanded zip
          commit_message: |
            doc: publish ${{ env.DOCUMENT_FULL_NAME }}

            Reason: run lifecycle.yaml by ${{ github.actor }}
          commit_user_name: stichting-crow-klusjesbot
          commit_user_email: 84876605+stichting-crow-klusjesbot@users.noreply.github.com
